"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.init = void 0;
const webdriverio_1 = require("webdriverio");
const classes_js_1 = require("./classes.js");
const constants_js_1 = require("./constants.js");
async function init(opts) {
    // CJS variants of the Launcher and Service classes are needed here
    // - which is why we are not simply doing a dynamic import of `../session.js`
    const testRunnerOpts = opts;
    let capabilities = {
        browserName: 'electron',
        [constants_js_1.CUSTOM_CAPABILITY_NAME]: opts,
    };
    const launcher = new classes_js_1.CJSElectronLauncher(opts, capabilities, testRunnerOpts);
    const service = new classes_js_1.CJSElectronService(opts);
    await launcher.onPrepare(testRunnerOpts, [capabilities]);
    // initialise session
    const browser = await (0, webdriverio_1.remote)({
        capabilities,
    });
    await service.before(capabilities, [], browser);
    return browser;
}
exports.init = init;
//# sourceMappingURL=session.js.map
{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/cjs/index.ts"],"names":[],"mappings":";;;AACA,2CAAuD;AAGvD,6CAAmD;AACnD,6CAAuE;AASvE,OAAO,CAAC,OAAO,GAAG,+BAAkB,CAAC;AACrC,OAAO,CAAC,QAAQ,GAAG,gCAAmB,CAAC;AAqC1B,QAAA,OAAO,GAAwB,iBAAW,CAAC;AAC3C,QAAA,aAAa,GAAmE,iBAAW,CAAC","sourcesContent":["import { fn as vitestFn } from '@vitest/spy';\nimport { browser as wdioBrowser } from '@wdio/globals';\nimport type { PackageJson } from 'read-package-up';\n\nimport { init as initSession } from './session.js';\nimport { CJSElectronLauncher, CJSElectronService } from './classes.js';\nimport type {\n  ElectronInterface,\n  ElectronServiceAPI,\n  ElectronServiceOptions,\n  ElectronType,\n  WdioElectronWindowObj,\n} from './types.js';\n\nexports.default = CJSElectronService;\nexports.launcher = CJSElectronLauncher;\n\ninterface BrowserExtension {\n  /**\n   * Access the WebdriverIO Electron Service API.\n   *\n   * - {@link ElectronServiceAPI.clearAllMocks `browser.electron.clearAllMocks`} - Clear mock functions from the Electron API\n   * - {@link ElectronServiceAPI.execute `browser.electron.execute`} - Execute code in the Electron main process context\n   * - {@link ElectronServiceAPI.mock `browser.electron.mock`} - Mock a function from the Electron API, e.g. `dialog.showOpenDialog`\n   * - {@link ElectronServiceAPI.mockAll `browser.electron.mockAll`} - Mock an entire API object of the Electron API, e.g. `app` or `dialog`\n   * - {@link ElectronServiceAPI.resetAllMocks `browser.electron.resetAllMocks`} - Reset mock functions from the Electron API\n   * - {@link ElectronServiceAPI.restoreAllMocks `browser.electron.restoreAllMocks`} - Remove mock functions from the Electron API\n   */\n  electron: ElectronServiceAPI;\n}\n\ndeclare global {\n  interface Window {\n    wdioElectron: WdioElectronWindowObj;\n  }\n  namespace WebdriverIO {\n    interface Browser extends BrowserExtension {}\n    interface MultiRemoteBrowser extends BrowserExtension {}\n    interface Capabilities {\n      /**\n       * custom capabilities to configure the Electron service\n       */\n      'wdio:electronServiceOptions'?: ElectronServiceOptions;\n    }\n  }\n\n  var browser: WebdriverIO.Browser;\n  var fn: typeof vitestFn;\n  var originalApi: Record<ElectronInterface, ElectronType[ElectronInterface]>;\n  var packageJson: PackageJson;\n}\n\nexport const browser: WebdriverIO.Browser = wdioBrowser;\nexport const startElectron: (opts: ElectronServiceOptions) => Promise<WebdriverIO.Browser> = initSession;\n"]}
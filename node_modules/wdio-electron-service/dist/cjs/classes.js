"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CJSElectronService = exports.CJSElectronLauncher = void 0;
// Workaround for ts-node converting dynamic imports to requires
// see https://github.com/TypeStrong/ts-node/discussions/1290
const dynamicImport = new Function('specifier', 'return import(specifier)');
class CJSElectronLauncher {
    constructor(options, caps, config) {
        this.instance = (async () => {
            const importPath = '../launcher.js';
            const { default: Launcher } = await dynamicImport(importPath);
            return new Launcher(options, caps, config);
        })();
    }
    async onPrepare(config, capabilities) {
        const instance = (await this.instance);
        return instance.onPrepare?.(config, capabilities);
    }
}
exports.CJSElectronLauncher = CJSElectronLauncher;
class CJSElectronService {
    constructor(globalOptions) {
        this.instance = (async () => {
            const importPath = '../service.js';
            const { default: Service } = await dynamicImport(importPath);
            return new Service(globalOptions);
        })();
    }
    async beforeSession(config, capabilities, specs, cid) {
        const instance = (await this.instance);
        return instance.beforeSession?.(config, capabilities, specs, cid);
    }
    async before(capabilities, specs, browser) {
        const instance = (await this.instance);
        return instance.before?.(capabilities, specs, browser);
    }
}
exports.CJSElectronService = CJSElectronService;
//# sourceMappingURL=classes.js.map
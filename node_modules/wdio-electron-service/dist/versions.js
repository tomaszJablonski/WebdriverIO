import fetch from 'node-fetch';
import { compareVersions } from 'compare-versions';
import { fullVersions } from 'electron-to-chromium';
import log from './log.js';
const electronChromiumVersionMap = {};
export const getChromiumVersion = async (electronVersion) => {
    log.debug('Updating Electron - Chromium version map...');
    try {
        // get the electron releases list and construct the version map
        const body = await fetch('https://electronjs.org/headers/index.json');
        const allElectronVersions = (await body.json());
        allElectronVersions
            .sort(({ version: a }, { version: b }) => compareVersions(a, b))
            .forEach(({ chrome, version }) => {
            electronChromiumVersionMap[version] = chrome;
        });
        return electronChromiumVersionMap[electronVersion];
    }
    catch (e) {
        // fall back to the locally installed electron-to-chromium version map
        log.debug('Map update failed: ', e);
        return fullVersions[electronVersion];
    }
};
//# sourceMappingURL=versions.js.map
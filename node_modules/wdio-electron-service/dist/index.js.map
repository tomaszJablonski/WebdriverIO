{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,IAAI,WAAW,EAAE,MAAM,eAAe,CAAC;AAIvD,OAAO,EAAE,IAAI,IAAI,WAAW,EAAE,MAAM,cAAc,CAAC;AACnD,OAAO,qBAAqB,MAAM,eAAe,CAAC;AAClD,OAAO,qBAAqB,MAAM,cAAc,CAAC;AASjD,MAAM,CAAC,MAAM,QAAQ,GAAG,qBAAqB,CAAC;AAC9C,eAAe,qBAAqB,CAAC;AAsCrC,MAAM,CAAC,MAAM,OAAO,GAAwB,WAAW,CAAC;AACxD,MAAM,CAAC,MAAM,aAAa,GAAmE,WAAW,CAAC;AACzG,cAAc,YAAY,CAAC","sourcesContent":["import { browser as wdioBrowser } from '@wdio/globals';\nimport { fn as vitestFn } from '@vitest/spy';\nimport type { PackageJson } from 'read-package-up';\n\nimport { init as initSession } from './session.js';\nimport ElectronLaunchService from './launcher.js';\nimport ElectronWorkerService from './service.js';\nimport type {\n  ElectronInterface,\n  ElectronServiceAPI,\n  ElectronServiceOptions,\n  ElectronType,\n  WdioElectronWindowObj,\n} from './types.js';\n\nexport const launcher = ElectronLaunchService;\nexport default ElectronWorkerService;\n\nexport interface BrowserExtension {\n  /**\n   * Access the WebdriverIO Electron Service API.\n   *\n   * - {@link ElectronServiceAPI.clearAllMocks `browser.electron.clearAllMocks`} - Clear the Electron API mock functions\n   * - {@link ElectronServiceAPI.execute `browser.electron.execute`} - Execute code in the Electron main process context\n   * - {@link ElectronServiceAPI.mock `browser.electron.mock`} - Mock a function from the Electron API, e.g. `dialog.showOpenDialog`\n   * - {@link ElectronServiceAPI.mockAll `browser.electron.mockAll`} - Mock an entire API object of the Electron API, e.g. `app` or `dialog`\n   * - {@link ElectronServiceAPI.resetAllMocks `browser.electron.resetAllMocks`} - Reset the Electron API mock functions\n   * - {@link ElectronServiceAPI.restoreAllMocks `browser.electron.restoreAllMocks`} - Restore the original Electron API functionality\n   */\n  electron: ElectronServiceAPI;\n}\n\ndeclare global {\n  interface Window {\n    wdioElectron: WdioElectronWindowObj;\n  }\n\n  namespace WebdriverIO {\n    interface Browser extends BrowserExtension {}\n    interface MultiRemoteBrowser extends BrowserExtension {}\n    interface Capabilities {\n      /**\n       * custom capabilities to configure the Electron service\n       */\n      'wdio:electronServiceOptions'?: ElectronServiceOptions;\n    }\n  }\n\n  var fn: typeof vitestFn;\n  var originalApi: Record<ElectronInterface, ElectronType[ElectronInterface]>;\n  var browser: WebdriverIO.Browser;\n  var packageJson: PackageJson;\n}\n\nexport const browser: WebdriverIO.Browser = wdioBrowser;\nexport const startElectron: (opts: ElectronServiceOptions) => Promise<WebdriverIO.Browser> = initSession;\nexport * from './types.js';\n"]}
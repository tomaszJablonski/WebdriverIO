{"version":3,"file":"session.js","sourceRoot":"","sources":["../src/session.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,aAAa,CAAC;AAGrC,OAAO,qBAAqB,MAAM,cAAc,CAAC;AACjD,OAAO,qBAAqB,MAAM,eAAe,CAAC;AAClD,OAAO,EAAE,sBAAsB,EAAE,MAAM,gBAAgB,CAAC;AACxD,OAAO,GAAG,MAAM,UAAU,CAAC;AAG3B,MAAM,CAAC,KAAK,UAAU,IAAI,CAAC,IAA4B;IACrD,MAAM,cAAc,GAAG,IAA0B,CAAC;IAClD,IAAI,YAAY,GAAG;QACjB,WAAW,EAAE,UAAU;QACvB,CAAC,sBAAsB,CAAC,EAAE,IAAI;KAC/B,CAAC;IAEF,MAAM,QAAQ,GAAG,IAAI,qBAAqB,CAAC,IAAI,EAAE,YAAY,EAAE,cAAc,CAAC,CAAC;IAC/E,MAAM,OAAO,GAAG,IAAI,qBAAqB,CAAC,IAAI,CAAC,CAAC;IAEhD,MAAM,QAAQ,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC;IAEzD,GAAG,CAAC,KAAK,CAAC,uBAAuB,EAAE,YAAY,CAAC,CAAC;IAEjD,qBAAqB;IACrB,MAAM,OAAO,GAAG,MAAM,MAAM,CAAC;QAC3B,YAAY;KACb,CAAC,CAAC;IAEH,MAAM,OAAO,CAAC,MAAM,CAAC,YAAY,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC;IAEhD,OAAO,OAAO,CAAC;AACjB,CAAC","sourcesContent":["import { remote } from 'webdriverio';\nimport type { Options } from '@wdio/types';\n\nimport ElectronWorkerService from './service.js';\nimport ElectronLaunchService from './launcher.js';\nimport { CUSTOM_CAPABILITY_NAME } from './constants.js';\nimport log from './log.js';\nimport type { ElectronServiceOptions } from './types.js';\n\nexport async function init(opts: ElectronServiceOptions) {\n  const testRunnerOpts = opts as Options.Testrunner;\n  let capabilities = {\n    browserName: 'electron',\n    [CUSTOM_CAPABILITY_NAME]: opts,\n  };\n\n  const launcher = new ElectronLaunchService(opts, capabilities, testRunnerOpts);\n  const service = new ElectronWorkerService(opts);\n\n  await launcher.onPrepare(testRunnerOpts, [capabilities]);\n\n  log.debug('Session capabilities:', capabilities);\n\n  // initialise session\n  const browser = await remote({\n    capabilities,\n  });\n\n  await service.before(capabilities, [], browser);\n\n  return browser;\n}\n"]}
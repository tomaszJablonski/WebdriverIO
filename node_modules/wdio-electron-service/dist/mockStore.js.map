{"version":3,"file":"mockStore.js","sourceRoot":"","sources":["../src/mockStore.ts"],"names":[],"mappings":";;;;;;;;;;;;AAEA,MAAM,OAAO,wBAAwB;IAGnC;QAFA,oDAAoC;QAGlC,uBAAA,IAAI,qCAAY,IAAI,GAAG,EAAwB,MAAA,CAAC;IAClD,CAAC;IAED,OAAO,CAAC,IAAkB;QACxB,uBAAA,IAAI,yCAAS,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,CAAC;QAC5C,OAAO,IAAI,CAAC;IACd,CAAC;IAED,OAAO,CAAC,MAAc;QACpB,MAAM,IAAI,GAAG,uBAAA,IAAI,yCAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,EAAE,CAAC;YACV,MAAM,IAAI,KAAK,CAAC,2BAA2B,MAAM,GAAG,CAAC,CAAC;QACxD,CAAC;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED,QAAQ;QACN,OAAO,KAAK,CAAC,IAAI,CAAC,uBAAA,IAAI,yCAAS,CAAC,OAAO,EAAE,CAAC,CAAC;IAC7C,CAAC;CACF;;AAED,MAAM,SAAS,GAAG,IAAI,wBAAwB,EAAE,CAAC;AAEjD,eAAe,SAAS,CAAC","sourcesContent":["import type { ElectronMock } from './types.js';\n\nexport class ElectronServiceMockStore {\n  #mockFns: Map<string, ElectronMock>;\n\n  constructor() {\n    this.#mockFns = new Map<string, ElectronMock>();\n  }\n\n  setMock(mock: ElectronMock): ElectronMock {\n    this.#mockFns.set(mock.getMockName(), mock);\n    return mock;\n  }\n\n  getMock(mockId: string) {\n    const mock = this.#mockFns.get(mockId);\n    if (!mock) {\n      throw new Error(`No mock registered for \"${mockId}\"`);\n    }\n\n    return mock;\n  }\n\n  getMocks() {\n    return Array.from(this.#mockFns.entries());\n  }\n}\n\nconst mockStore = new ElectronServiceMockStore();\n\nexport default mockStore;\n"]}
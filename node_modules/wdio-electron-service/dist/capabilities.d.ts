import type { Capabilities } from '@wdio/types';
import type { ElectronServiceOptions } from './types.js';
export declare function getChromeOptions(options: ElectronServiceOptions, cap: WebdriverIO.Capabilities): {
    args: string[];
    binary: string | undefined;
    extensions?: string[] | undefined;
    localState?: {
        [name: string]: any;
    } | undefined;
    detach?: boolean | undefined;
    debuggerAddress?: string | undefined;
    excludeSwitches?: string[] | undefined;
    minidumpPath?: string | undefined;
    mobileEmulation?: {
        userAgent?: string | undefined;
        deviceName?: string | undefined;
        deviceMetrics?: {
            width?: number | undefined;
            height?: number | undefined;
            pixelRatio?: number | undefined;
            touch?: boolean | undefined;
        } | undefined;
    } | undefined;
    perfLoggingPrefs?: {
        enableNetwork?: boolean | undefined;
        enablePage?: boolean | undefined;
        tracingCategories?: string | undefined;
        bufferUsageReportingInterval?: number | undefined;
    } | undefined;
    prefs?: Record<string, string | number | boolean | {
        [property: string]: string | number | boolean | any | readonly (string | number | boolean | any | readonly (string | number | boolean | any | readonly (string | number | boolean | any | readonly (string | number | boolean | any | readonly (string | number | boolean | any | readonly (string | number | boolean | any | readonly (string | number | boolean | any | readonly (string | number | boolean | any | readonly (string | number | boolean | any | readonly (string | number | boolean | any | readonly (string | number | boolean | any | any | null)[] | null)[] | null)[] | null)[] | null)[] | null)[] | null)[] | null)[] | null)[] | null)[] | null)[] | null;
    } | readonly (string | number | boolean | any | readonly (string | number | boolean | any | readonly (string | number | boolean | any | readonly (string | number | boolean | any | readonly (string | number | boolean | any | readonly (string | number | boolean | any | readonly (string | number | boolean | any | readonly (string | number | boolean | any | readonly (string | number | boolean | any | readonly (string | number | boolean | any | readonly (string | number | boolean | any | any | null)[] | null)[] | null)[] | null)[] | null)[] | null)[] | null)[] | null)[] | null)[] | null)[] | null)[] | null> | undefined;
    windowTypes: string[];
};
export declare function getChromedriverOptions(cap: WebdriverIO.Capabilities): WebdriverIO.ChromedriverOptions;
/**
 * Get capability independent of which type of capabilities is set
 */
export declare function getElectronCapabilities(caps: Capabilities.RemoteCapability): Capabilities.RemoteCapability[] | WebdriverIO.Capabilities[];
//# sourceMappingURL=capabilities.d.ts.map